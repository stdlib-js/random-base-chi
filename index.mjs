// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@v0.2.1-esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@v0.2.2-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-write-accessor@v0.2.1-esm/index.mjs";import{isPrimitive as n}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-number@v0.2.1-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.2.1-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@v0.2.1-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.2.1-esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-constant-function@v0.2.1-esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-noop@v0.2.1-esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-nan@v0.2.1-esm/index.mjs";import{factory as p}from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-chisquare@v0.2.0-esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/array-to-json@v0.2.1-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-sqrt@v0.2.1-esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/error-tools-fmtprodmsg@v0.2.1-esm/index.mjs";function f(){var f,u,g,c,v;if(0===arguments.length)f=p();else if(1===arguments.length&&r(arguments[0]))if(o(g=arguments[0],"prng")){if(!i(g.prng))throw new TypeError(j("0o56u","prng",g.prng));f=p({prng:g.prng})}else f=p(g);else{if(!n(v=arguments[0]))throw new TypeError(j("0o571",v));if(arguments.length>1){if(!r(g=arguments[1]))throw new TypeError(j("0o52V",g));if(o(g,"prng")){if(!i(g.prng))throw new TypeError(j("0o56u","prng",g.prng));f=p(v,{prng:g.prng})}else f=p(v,g)}else f=p(v)}return c=void 0===v?function(e){if(l(e)||e<=0)return NaN;return a(f(e))}:function(){return a(f())},u=f.PRNG,e(c,"NAME","chi"),g&&g.prng?(e(c,"seed",null),e(c,"seedLength",null),s(c,"state",d(null),m),e(c,"stateLength",null),e(c,"byteLength",null),e(c,"toJSON",d(null))):(t(c,"seed",(function(){return u.seed})),t(c,"seedLength",(function(){return u.seedLength})),s(c,"state",(function(){return u.state}),(function(e){u.state=e})),t(c,"stateLength",(function(){return u.stateLength})),t(c,"byteLength",(function(){return u.byteLength})),e(c,"toJSON",(function(){var e={type:"PRNG"};e.name=c.NAME,e.state=h(u.state),e.params=void 0===v?[]:[v];return e}))),e(c,"PRNG",u),c}var u=f();e(u,"factory",f);export{u as default,f as factory};
//# sourceMappingURL=index.mjs.map
